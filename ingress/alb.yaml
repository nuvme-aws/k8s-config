apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: oficina5
  name: alb-ingress
  annotations:

    # Ingress GroupName
    alb.ingress.kubernetes.io/group.name: eks-alb-ingress

    # Ingress Core Settings
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:837042927026:certificate/cc9c7e91-ca24-44ec-8d8e-46a5d34fe043
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
  
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200-404'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'

spec:
  rules:
    - host: eks.oficina5.com.br
      http:
        paths:
          - path: /*
            backend:
              serviceName: eks-example
              servicePort: 80
    - host: eks1.oficina5.com.br
      http:
        paths:
          - path: /*
            backend:
              serviceName: eks-example2
              servicePort: 80

